// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:movie_futter/bean/ying_yuan_xiang_qing_bean_entity.dart';
import 'package:movie_futter/generated/json/ying_yuan_xiang_qing_bean_entity_helper.dart';
import 'package:movie_futter/bean/banner_bean_entity.dart';
import 'package:movie_futter/generated/json/banner_bean_entity_helper.dart';
import 'package:movie_futter/bean/xiangqing_bean_entity.dart';
import 'package:movie_futter/generated/json/xiangqing_bean_entity_helper.dart';
import 'package:movie_futter/bean/remenmovie_entity.dart';
import 'package:movie_futter/generated/json/remenmovie_entity_helper.dart';
import 'package:movie_futter/bean/ying_yuan_ping_j_bean_entity.dart';
import 'package:movie_futter/generated/json/ying_yuan_ping_j_bean_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case YingYuanXiangQingBeanEntity:
			return yingYuanXiangQingBeanEntityFromJson(data as YingYuanXiangQingBeanEntity, json) as T;			case YingYuanXiangQingBeanResult:
			return yingYuanXiangQingBeanResultFromJson(data as YingYuanXiangQingBeanResult, json) as T;			case BannerBeanEntity:
			return bannerBeanEntityFromJson(data as BannerBeanEntity, json) as T;			case BannerBeanResult:
			return bannerBeanResultFromJson(data as BannerBeanResult, json) as T;			case XiangqingBeanEntity:
			return xiangqingBeanEntityFromJson(data as XiangqingBeanEntity, json) as T;			case XiangqingBeanResult:
			return xiangqingBeanResultFromJson(data as XiangqingBeanResult, json) as T;			case XiangqingBeanResultMovieActor:
			return xiangqingBeanResultMovieActorFromJson(data as XiangqingBeanResultMovieActor, json) as T;			case XiangqingBeanResultMovieDirector:
			return xiangqingBeanResultMovieDirectorFromJson(data as XiangqingBeanResultMovieDirector, json) as T;			case XiangqingBeanResultShortFilmList:
			return xiangqingBeanResultShortFilmListFromJson(data as XiangqingBeanResultShortFilmList, json) as T;			case RemenmovieEntity:
			return remenmovieEntityFromJson(data as RemenmovieEntity, json) as T;			case RemanmovieResult:
			return remanmovieResultFromJson(data as RemanmovieResult, json) as T;			case YingYuanPingJBeanEntity:
			return yingYuanPingJBeanEntityFromJson(data as YingYuanPingJBeanEntity, json) as T;			case YingYuanPingJBeanResult:
			return yingYuanPingJBeanResultFromJson(data as YingYuanPingJBeanResult, json) as T;    }
    return data as T;
  }  static _getToJson<T>(Type type, data) {
		switch (type) {			case YingYuanXiangQingBeanEntity:
			return yingYuanXiangQingBeanEntityToJson(data as YingYuanXiangQingBeanEntity);			case YingYuanXiangQingBeanResult:
			return yingYuanXiangQingBeanResultToJson(data as YingYuanXiangQingBeanResult);			case BannerBeanEntity:
			return bannerBeanEntityToJson(data as BannerBeanEntity);			case BannerBeanResult:
			return bannerBeanResultToJson(data as BannerBeanResult);			case XiangqingBeanEntity:
			return xiangqingBeanEntityToJson(data as XiangqingBeanEntity);			case XiangqingBeanResult:
			return xiangqingBeanResultToJson(data as XiangqingBeanResult);			case XiangqingBeanResultMovieActor:
			return xiangqingBeanResultMovieActorToJson(data as XiangqingBeanResultMovieActor);			case XiangqingBeanResultMovieDirector:
			return xiangqingBeanResultMovieDirectorToJson(data as XiangqingBeanResultMovieDirector);			case XiangqingBeanResultShortFilmList:
			return xiangqingBeanResultShortFilmListToJson(data as XiangqingBeanResultShortFilmList);			case RemenmovieEntity:
			return remenmovieEntityToJson(data as RemenmovieEntity);			case RemanmovieResult:
			return remanmovieResultToJson(data as RemanmovieResult);			case YingYuanPingJBeanEntity:
			return yingYuanPingJBeanEntityToJson(data as YingYuanPingJBeanEntity);			case YingYuanPingJBeanResult:
			return yingYuanPingJBeanResultToJson(data as YingYuanPingJBeanResult);    }
    return data as T;
  }  static T fromJsonAsT<T>(json) {
    switch (T.toString()) {			case 'YingYuanXiangQingBeanEntity':
			return YingYuanXiangQingBeanEntity().fromJson(json) as T;			case 'YingYuanXiangQingBeanResult':
			return YingYuanXiangQingBeanResult().fromJson(json) as T;			case 'BannerBeanEntity':
			return BannerBeanEntity().fromJson(json) as T;			case 'BannerBeanResult':
			return BannerBeanResult().fromJson(json) as T;			case 'XiangqingBeanEntity':
			return XiangqingBeanEntity().fromJson(json) as T;			case 'XiangqingBeanResult':
			return XiangqingBeanResult().fromJson(json) as T;			case 'XiangqingBeanResultMovieActor':
			return XiangqingBeanResultMovieActor().fromJson(json) as T;			case 'XiangqingBeanResultMovieDirector':
			return XiangqingBeanResultMovieDirector().fromJson(json) as T;			case 'XiangqingBeanResultShortFilmList':
			return XiangqingBeanResultShortFilmList().fromJson(json) as T;			case 'RemenmovieEntity':
			return RemenmovieEntity().fromJson(json) as T;			case 'RemanmovieResult':
			return RemanmovieResult().fromJson(json) as T;			case 'YingYuanPingJBeanEntity':
			return YingYuanPingJBeanEntity().fromJson(json) as T;			case 'YingYuanPingJBeanResult':
			return YingYuanPingJBeanResult().fromJson(json) as T;    }
    return null;
  }}