// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:movie_futter/bean/banner_bean_entity.dart';
import 'package:movie_futter/generated/json/banner_bean_entity_helper.dart';
import 'package:movie_futter/bean/remenmovie_entity.dart';
import 'package:movie_futter/generated/json/remenmovie_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case BannerBeanEntity:
			return bannerBeanEntityFromJson(data as BannerBeanEntity, json) as T;			case BannerBeanResult:
			return bannerBeanResultFromJson(data as BannerBeanResult, json) as T;			case RemenmovieEntity:
			return remenmovieEntityFromJson(data as RemenmovieEntity, json) as T;			case RemanmovieResult:
			return remanmovieResultFromJson(data as RemanmovieResult, json) as T;    }
    return data as T;
  }  static _getToJson<T>(Type type, data) {
		switch (type) {			case BannerBeanEntity:
			return bannerBeanEntityToJson(data as BannerBeanEntity);			case BannerBeanResult:
			return bannerBeanResultToJson(data as BannerBeanResult);			case RemenmovieEntity:
			return remenmovieEntityToJson(data as RemenmovieEntity);			case RemanmovieResult:
			return remanmovieResultToJson(data as RemanmovieResult);    }
    return data as T;
  }  static T fromJsonAsT<T>(json) {
    switch (T.toString()) {			case 'BannerBeanEntity':
			return BannerBeanEntity().fromJson(json) as T;			case 'BannerBeanResult':
			return BannerBeanResult().fromJson(json) as T;			case 'RemenmovieEntity':
			return RemenmovieEntity().fromJson(json) as T;			case 'RemanmovieResult':
			return RemanmovieResult().fromJson(json) as T;    }
    return null;
  }}